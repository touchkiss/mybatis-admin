<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.touchkiss.mybatis.base.mapper.auto.CategoryAutoMapper">
        <cache
                eviction="FIFO"
                flushInterval="60000"
                readOnly="true"
                size="512" />
    <resultMap id="baseResultMap" type="com.touchkiss.mybatis.base.bean.Category">
        <id column="id" property="id"
            jdbcType="INTEGER"/>
        <result column="parentid" property="parentid"
                jdbcType="INTEGER"/>
        <result column="name" property="name"
                jdbcType="VARCHAR"/>
        <result column="top" property="top"
                jdbcType="BIT"/>
    </resultMap>

    <sql id="selectSql">
        select
        <if test="meta.distinct != null and meta.distinct == true"> distinct </if>
        <foreach collection="meta.fields" item="item" index="index" separator=",">
            <if test="item.table.aliasTable != null and item.isFunction == false">${item.table.aliasTable}.
            </if>${item.field} </foreach>
        from
        <if test="meta.from.getSchema() != null">$
            {meta.from.getSchema()}.
        </if>${meta.from.table}
        <if test="meta.from.aliasTable != null">${meta.from.aliasTable}</if>
        <if test="meta.joinTable != null">
            <foreach collection="meta.joinTable" item="item" index="index" separator=" ">
            ${item.join} join
                <if test="item.getSchema() != null">${item.getSchema()}.
                </if>${item.table} ${item.aliasTable}
                <if test="item.conditions != null">on
                    <foreach collection="item.conditions" item="condition" index="i">
                        <if test="i &gt; 0">${item.sqlLogic}</if>
                        <if test="condition.isRelateField == true">
                        ${item.aliasTable}.${condition.joinField} ${condition.operator} ${condition.relateTableAlias}.${condition.relateField}
                        </if>
                        <if test="condition.isRelateField == false">
                        ${item.aliasTable}.${condition.joinField} ${condition.operator} #{condition.relateValue}
                        </if>
                    </foreach>
                </if>
            </foreach>
        </if>
        <if test="meta.wheres != null">
            WHERE
            <foreach collection="meta.wheres" item="item" index="index" separator=" ">
                <if test="item.prefix != null">${item.prefix}</if>
                <if test="item.value != null">#{item.value}</if>
                <if test="item.suffix != null">${item.suffix}</if>
            </foreach>
        </if>
        <if test="meta.groupFields != null">
            group by
            <foreach collection="meta.groupFields" item="item" index="index" separator=",">
                <if test="item.table.aliasTable != null and item.isFunction == false">${item.table.aliasTable}.
                </if>${item.field}
            </foreach>
        </if>
        <if test="meta.sortFields != null">
            order by
            <foreach collection="meta.sortFields" item="item" index="index" separator=",">
                <if test="item.table.aliasTable != null and item.isFunction == false">${item.table.aliasTable}.
                </if>${item.field} ${item.order}
            </foreach>
        </if>
    </sql>

    <sql id="whereSql">
        <if test="wheres != null">
            WHERE
            <foreach collection="wheres" item="item" index="index" separator=" ">
                <if test="item.prefix != null">${item.prefix}</if>
                <if test="item.value != null">#{item.value}</if>
                <if test="item.suffix != null">${item.suffix}</if>
            </foreach>
        </if>
    </sql>

    <select id="selectAll"
            resultMap="baseResultMap"
            useCache="true">
        SELECT
        <include refid="allFields"/>
        FROM category
    </select>

    <select id="select" parameterType="com.touchkiss.mybatis.sqlbuild.selector.SelectMetadata"
            resultMap="baseResultMap" 
            useCache="true">
        <include refid="selectSql"/>
    </select>
    <select id="selectPage" parameterType="com.touchkiss.mybatis.sqlbuild.selector.SelectMetadata"
            resultMap="baseResultMap" 
            useCache="true">
        <include refid="selectSql"/>
    </select>
    <select id="selectRow" parameterType="com.touchkiss.mybatis.sqlbuild.selector.SelectMetadata"
            resultMap="baseResultMap" 
            useCache="true">
        <include refid="selectSql"/>
    </select>

    <select id="selectForMapAll"
            resultType="map" 
            useCache="true">
        SELECT <include refid="allFields"/>
        FROM category
    </select>
    <select id="selectForMap" parameterType="com.touchkiss.mybatis.sqlbuild.selector.SelectMetadata"
            resultType="map" 
            useCache="true">
        <include refid="selectSql"/>
    </select>
    <select id="selectForListMap" resultType="map"
            parameterType="com.touchkiss.mybatis.sqlbuild.selector.SelectMetadata" 
            useCache="true">
        <include refid="selectSql"/>
    </select>
    <select id="selectPageForListMap" resultType="map"
            parameterType="com.touchkiss.mybatis.sqlbuild.selector.SelectMetadata" 
            useCache="true">
        <include refid="selectSql"/>
    </select>

    <sql id="allFields">
        id,parentid,name,top
    </sql>

    <insert id="insert"
            parameterType="com.touchkiss.mybatis.base.bean.Category"
            flushCache="true"
            useGeneratedKeys="true"
            keyColumn="id"
            keyProperty="id">
        insert into category(id
        ,parentid
        ,name
        ,top)
        values(<if test="id != null">#{id
        ,jdbcType=INTEGER}</if><if test="id == null">null</if>,<if test="parentid != null">#{parentid
        ,jdbcType=INTEGER}</if><if test="parentid == null">null</if>,<if test="name != null">#{name
        ,jdbcType=VARCHAR}</if><if test="name == null">null</if>,<if test="top != null">#{top
        ,jdbcType=BIT}</if><if test="top == null">null</if>)
    </insert>

    <insert id="insertSelective"
            parameterType="com.touchkiss.mybatis.base.bean.Category"
            flushCache="true"
            useGeneratedKeys="true"
            keyColumn="id"
            keyProperty="id">
        insert into category
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">id,</if>            <if test="parentid != null">parentid,</if>            <if test="name != null">name,</if>            <if test="top != null">top,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">#{id
                ,jdbcType=INTEGER},
            </if>            <if test="parentid != null">#{parentid
                ,jdbcType=INTEGER},
            </if>            <if test="name != null">#{name
                ,jdbcType=VARCHAR},
            </if>            <if test="top != null">#{top
                ,jdbcType=BIT},
            </if>
        </trim>
    </insert>

    <update id="update" parameterType="map"
            flushCache="true">
        update category set
          id = <if test="record.id != null">#{record.id,jdbcType=INTEGER}</if><if test="record.id == null">null</if>
          ,parentid = <if test="record.parentid != null">#{record.parentid,jdbcType=INTEGER}</if><if test="record.parentid == null">null</if>
          ,name = <if test="record.name != null">#{record.name,jdbcType=VARCHAR}</if><if test="record.name == null">null</if>
          ,top = <if test="record.top != null">#{record.top,jdbcType=BIT}</if><if test="record.top == null">null</if>
        <include refid="whereSql"/>
    </update>

    <update id="updateSelective"
            parameterType="map"
            flushCache="true">
        update category
        <set>
            <if test="record.id != null">
            id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.parentid != null">
            parentid = #{record.parentid,jdbcType=INTEGER},
            </if>
            <if test="record.name != null">
            name = #{record.name,jdbcType=VARCHAR},
            </if>
            <if test="record.top != null">
            top = #{record.top,jdbcType=BIT},
            </if>
        </set>
        <include refid="whereSql"/>
    </update>

    <delete id="delete" parameterType="map"
            flushCache="true">
        delete from category
        <include refid="whereSql"/>
    </delete>

</mapper>